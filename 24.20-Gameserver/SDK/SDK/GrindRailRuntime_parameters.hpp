#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrindRailRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GrindRailRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GrindRailRuntime.FortGrindRail.GetConnectionForGrinding
// 0x0028 (0x0028 - 0x0000)
struct FortGrindRail_GetConnectionForGrinding final
{
public:
	float                                         DistanceToTravel;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentDistanceAlongSpline;                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NextDistanceOnRail;                                // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightLeanValue;                                    // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewRail;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceAlongNewRail;                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortGrindRail*                         TheNewRail;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewRailReverseDirection;                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GrindRailRuntime.FortGrindRail.IsTipCapped
// 0x0002 (0x0002 - 0x0000)
struct FortGrindRail_IsTipCapped final
{
public:
	bool                                          bStartTip;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRail.IsTipConnected
// 0x0002 (0x0002 - 0x0000)
struct FortGrindRail_IsTipConnected final
{
public:
	bool                                          bStartTip;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRail.NativeGetNextPositionToGrind
// 0x0048 (0x0048 - 0x0000)
struct FortGrindRail_NativeGetNextPositionToGrind final
{
public:
	float                                         DistanceToTravel;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentDistanceAlongSpline;                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightLeanValue;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutNextLocation;                                   // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGotToEnd;                                         // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NextLocationOnRail;                                // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrindRailBoosterMode                         BoosterMode;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitObstacle;                                      // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewRail;                                          // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceAlongNewRail;                              // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortGrindRail*                         TheNewRail;                                        // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewRailReverseDirection;                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GrindRailRuntime.FortGrindRail.OnPlaylistDataReady
// 0x0030 (0x0030 - 0x0000)
struct FortGrindRail_OnPlaylistDataReady final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRail.SetupMeshInfo
// 0x0018 (0x0018 - 0x0000)
struct FortGrindRail_SetupMeshInfo final
{
public:
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartIndex;                                        // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndIndex;                                          // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDistance;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndDistance;                                       // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRailLayerAnimInstance.AnimNotify_EntryEnter
// 0x0008 (0x0008 - 0x0000)
struct FortGrindRailLayerAnimInstance_AnimNotify_EntryEnter final
{
public:
	const class UAnimNotify*                      Notify;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRailLayerAnimInstance.AnimNotify_EntryExit
// 0x0008 (0x0008 - 0x0000)
struct FortGrindRailLayerAnimInstance_AnimNotify_EntryExit final
{
public:
	const class UAnimNotify*                      Notify;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRailLayerAnimInstance.AnimNotify_IdleEnter
// 0x0008 (0x0008 - 0x0000)
struct FortGrindRailLayerAnimInstance_AnimNotify_IdleEnter final
{
public:
	const class UAnimNotify*                      Notify;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGrindRailLayerAnimInstance.HandleBegunGrinding
// 0x0020 (0x0020 - 0x0000)
struct FortGrindRailLayerAnimInstance_HandleBegunGrinding final
{
public:
	bool                                          bWasAlreadyGrinding;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasJumpingFromRail;                               // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromInteraction;                                  // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreviousPlayerLocation;                            // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGameplayCueNotifyLoop_Grinding.CacheReferences
// 0x0020 (0x0020 - 0x0000)
struct FortGameplayCueNotifyLoop_Grinding_CacheReferences final
{
public:
	class UAudioComponent*                        InAudioComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemComponent*                     InEffectsComponent;                                // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                        InPlayerPawn;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPawnComponent_GrindRail*           InGrindComponent;                                  // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortGameplayCueNotifyLoop_Grinding.OnForwardChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameplayCueNotifyLoop_Grinding_OnForwardChanged final
{
public:
	bool                                          bNewState;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.AddMoveIgnoreActor
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_GrindRail_AddMoveIgnoreActor final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.AttemptDestroyVehicleWhileGrinding
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_AttemptDestroyVehicleWhileGrinding final
{
public:
	class AFortAthenaVehicle*                     Vehicle;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.BeginGrinding
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_BeginGrinding final
{
public:
	class AFortGrindRail*                         GrindRail;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OptionalStartDistance;                             // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromInteraction;                                  // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.CalculateVelocity
// 0x0020 (0x0020 - 0x0000)
struct FortPawnComponent_GrindRail_CalculateVelocity final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplayingMovement;                                // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutVelocity;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.CanBeginGrinding
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_CanBeginGrinding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.EndGrinding
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_EndGrinding final
{
public:
	bool                                          bSetEndMovementMode;                               // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.HandleHitWhenGrinding
// 0x00E0 (0x00E0 - 0x0000)
struct FortPawnComponent_GrindRail_HandleHitWhenGrinding final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.OnBaseMeshReady
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_OnBaseMeshReady final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.OnIgnoredBuildingEndPlay
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_OnIgnoredBuildingEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.OnJumpInput
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_OnJumpInput final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_OnMovementModeChanged final
{
public:
	class ACharacter*                             InCharacter;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.OnRep_CurrentBoosterMode
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_OnRep_CurrentBoosterMode final
{
public:
	EGrindRailBoosterMode                         PreviousBoosterMode;                               // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.OnWalkingBaseChanged
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_GrindRail_OnWalkingBaseChanged final
{
public:
	class AActor*                                 NewBase;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.ServerUpdateWeaponHolstered
// 0x0002 (0x0002 - 0x0000)
struct FortPawnComponent_GrindRail_ServerUpdateWeaponHolstered final
{
public:
	bool                                          bNewHolstered;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayEquipAnim;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.SetGrindBaseActor
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_GrindRail_SetGrindBaseActor final
{
public:
	class AActor*                                 NewBaseActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.SetGrindDistanceOnSpline
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_GrindRail_SetGrindDistanceOnSpline final
{
public:
	float                                         NewDistanceOnSpline;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.SetIsSprinting
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_SetIsSprinting final
{
public:
	bool                                          bNewIsSprinting;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.SetMovementStatus
// 0x0018 (0x0018 - 0x0000)
struct FortPawnComponent_GrindRail_SetMovementStatus final
{
public:
	struct FVector                                NewStatus;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.DrawDebugHUD
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_DrawDebugHUD final
{
public:
	class AHUD*                                   HUD;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvas*                                Canvas;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetCameraOrientedLeanValues
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_GrindRail_GetCameraOrientedLeanValues final
{
public:
	float                                         RawLeanForward;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RawLeanRight;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OrientedLeanForward;                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OrientedLeanRight;                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetGrindBaseActor
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_GrindRail_GetGrindBaseActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetGrindDistanceOnSpline
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_GrindRail_GetGrindDistanceOnSpline final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetGrindRequestJump
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_GetGrindRequestJump final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetHorizontalSplineAngleDeltaDegrees
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_GrindRail_GetHorizontalSplineAngleDeltaDegrees final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetLeanForwardSpeedNormalized
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_GrindRail_GetLeanForwardSpeedNormalized final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetMovementStatus
// 0x0018 (0x0018 - 0x0000)
struct FortPawnComponent_GrindRail_GetMovementStatus final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetSpeedHardCap
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_GrindRail_GetSpeedHardCap final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.GetWantsToGrind
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_GetWantsToGrind final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.IsGrinding
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_IsGrinding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.IsUsingToggleSprint
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_IsUsingToggleSprint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.IsWeaponActive
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_IsWeaponActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.IsWeaponADS
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_IsWeaponADS final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GrindRailRuntime.FortPawnComponent_GrindRail.NativeIsShooting
// 0x0001 (0x0001 - 0x0000)
struct FortPawnComponent_GrindRail_NativeIsShooting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

