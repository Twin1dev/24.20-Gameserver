#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MantisRuntime

#include "Basic.hpp"

#include "MantisRuntime_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class MantisRuntime.FortMantisLayerAnimInstance
// 0x0010 (0x15B0 - 0x15A0)
class UFortMantisLayerAnimInstance : public UFortPlayerAnimInstanceProxy
{
public:
	struct FFortMantisReplicatedAnimInstanceInfo  MantisAnimInstanceInfo;                            // 0x15A0(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void OnMantisTechniqueEnded(const int32 TechniqueIndex, const class FName TechniqueName);
	void OnMantisTechniqueStarted(const int32 TechniqueIndex, const class FName TechniqueName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMantisLayerAnimInstance">();
	}
	static class UFortMantisLayerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMantisLayerAnimInstance>();
	}
};

// Class MantisRuntime.FortItemLayerAnimInstance_UncleBrolly
// 0x0090 (0x0750 - 0x06C0)
class UFortItemLayerAnimInstance_UncleBrolly final : public UFortItemLayerAnimInstance
{
public:
	struct FCachedAnimStateArray                  UmbrellaGliderOpenStateDataArray;                  // 0x06C0(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FVector                                WrapTranslation;                                   // 0x06D8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               WrapRotation;                                      // 0x06F0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               RootRotationOffset;                                // 0x0708(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         LandingPredictedTimer;                             // 0x0720(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldUpdateYawCorrection;                        // 0x0724(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasAcceleratingBeforeDodge;                       // 0x0725(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_726[0x2];                                      // 0x0726(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UncleBrollyDeployCurveValue;                       // 0x0728(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DashChargeTier;                                    // 0x072C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DashChargeAdditivePlayrate;                        // 0x0730(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUmbrellaFailing;                                // 0x0734(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMeleeGuarding;                                  // 0x0735(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSprinting;                                      // 0x0736(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInAir;                                          // 0x0737(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLandingPredicted;                               // 0x0738(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsJumping;                                        // 0x0739(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDodging;                                        // 0x073A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDodgingEast;                                    // 0x073B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDodgingSouth;                                   // 0x073C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDodgingWest;                                    // 0x073D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDashing;                                        // 0x073E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDashCharging;                                   // 0x073F(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDashPredictingEnd;                              // 0x0740(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChargeTier1;                                    // 0x0741(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChargeTier2;                                    // 0x0742(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChargeTier3;                                    // 0x0743(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMeleeGuardingOrUmbrellaFailing;                   // 0x0744(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_Default_to_GuardLoop;                  // 0x0745(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_Default_to_GuardIntro;                 // 0x0746(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_GuardIntro_to_Default;                 // 0x0747(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpperBodyShouldPassThrough;                       // 0x0748(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUmbrellaGliderIsOpen;                             // 0x0749(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74A[0x6];                                      // 0x074A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortItemLayerAnimInstance_UncleBrolly">();
	}
	static class UFortItemLayerAnimInstance_UncleBrolly* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortItemLayerAnimInstance_UncleBrolly>();
	}
};

// Class MantisRuntime.UncleBrollyWeaponAnimInstance
// 0x0040 (0x0390 - 0x0350)
class UUncleBrollyWeaponAnimInstance final : public UAnimInstance
{
public:
	TSubclassOf<class UAnimInstance>              UncleBrollyItemLayer;                              // 0x0348(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               UmbrellaRotation;                                  // 0x0350(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         UmbrellaSpinSpeed;                                 // 0x0368(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlockDeployEndPlayrate;                            // 0x036C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlockDeployEndStartPosition;                       // 0x0370(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDodging;                                        // 0x0374(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingMeleeAnim;                               // 0x0375(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUmbrellaFailing;                                // 0x0376(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMeleeGuarding;                                  // 0x0377(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInAir;                                          // 0x0378(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDashing;                                        // 0x0379(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSprinting;                                      // 0x037A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPredictingEnd;                                  // 0x037B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDashCharging;                                   // 0x037C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDashPredictingEnd;                              // 0x037D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInAirAndMeleeGuarding;                            // 0x037E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_Default_to_DeployStart;                // 0x037F(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_DeployStart_to_Default;                // 0x0380(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_Fail_to_FailToDeploy;                  // 0x0381(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransition_FailLoop_to_DeployEnd;                 // 0x0382(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383[0xD];                                      // 0x0383(0x000D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UncleBrollyWeaponAnimInstance">();
	}
	static class UUncleBrollyWeaponAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUncleBrollyWeaponAnimInstance>();
	}
};

// Class MantisRuntime.FortAbilityTask_ApplyRootMotionMantisForce
// 0x0048 (0x0100 - 0x00B8)
class UFortAbilityTask_ApplyRootMotionMantisForce final : public UAbilityTask_ApplyRootMotion_Base
{
public:
	TMulticastInlineDelegate<void()>              OnFinish;                                          // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x00C8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           TechniqueMontage;                                  // 0x00D0(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortMantisRootMotionWarpInfo          WarpInfo;                                          // 0x00D8(0x0028)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAbilityTask_ApplyRootMotionMantisForce">();
	}
	static class UFortAbilityTask_ApplyRootMotionMantisForce* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAbilityTask_ApplyRootMotionMantisForce>();
	}
};

// Class MantisRuntime.FortAnimNotify_Mantis
// 0x0008 (0x0040 - 0x0038)
class UFortAnimNotify_Mantis final : public UAnimNotify
{
public:
	EFortMantisNotifyEvent                        MantisNotifyEvent;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMantisBranchRule                         MantisBranchRule;                                  // 0x0039(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMantisBranchPath                         MantisBranchPath;                                  // 0x003A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAnimNotify_Mantis">();
	}
	static class UFortAnimNotify_Mantis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAnimNotify_Mantis>();
	}
};

// Class MantisRuntime.FortAnimNotifyState_Mantis
// 0x0010 (0x0040 - 0x0030)
class UFortAnimNotifyState_Mantis final : public UAnimNotifyState
{
public:
	EFortMantisNotifyWindow                       MantisNotifyWindow;                                // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           MantisNotifyTag;                                   // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMantisNotifyRotationWarpRateRule         RotationRateWarpRule;                              // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bWarpRotation : 1;                                 // 0x0039(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWarpTranslation : 1;                              // 0x0039(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAnimNotifyState_Mantis">();
	}
	static class UFortAnimNotifyState_Mantis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAnimNotifyState_Mantis>();
	}
};

// Class MantisRuntime.FortGameplayAbility_Mantis
// 0x0048 (0x0B70 - 0x0B28)
class UFortGameplayAbility_Mantis final : public UFortGameplayAbility
{
public:
	bool                                          bAllowRootMotionWarping;                           // 0x0B28(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyEffectContainerOnTechniqueDamage;            // 0x0B29(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyEffectContainerOnTechniqueStart;             // 0x0B2A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B2B[0x5];                                      // 0x0B2B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMantisPawnComponent*               MantisPawnComponent;                               // 0x0B30(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_PlayMontageAndWait*        MontageTask;                                       // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_ApplyRootMotion_Base*      RootMotionTask;                                    // 0x0B40(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B48[0x28];                                     // 0x0B48(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_MantisAbilityTechniqueStarted(const struct FGameplayTagContainer& OwningTags, class FName SequenceName, bool StartsSequence, bool EndsSequence);
	void BP_OnMantisInputEvent(const EFortMantisTechniqueActivationInputType InputType, const EFortMantisTechniqueActivationTimingType InputTiming, const bool bDidInputStartTechnique, const bool bDidInputQueueTechnique, const float InputHeldDuration);
	void BP_OnMantisTechniqueHit(const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, const struct FGameplayTag& ApplicationTag);
	void BP_OnTechniqueNotifyEvent(const EFortMantisNotifyEvent NotifyEvent, const class UFortAnimNotify_Mantis* Notify);
	void BP_OnTechniqueNotifyWindowEnded(const EFortMantisNotifyWindow NotifyWindow, const class UFortAnimNotifyState_Mantis* Notify);
	void BP_OnTechniqueNotifyWindowStarted(const EFortMantisNotifyWindow NotifyWindow, const class UFortAnimNotifyState_Mantis* Notify);
	void ConfigureRootMotionWarping(const class FName TechniqueName, bool* bOutAllowTranslationWarp, bool* bOutAllowRotationWarp, class AActor** OutTargetActor, bool* bOutSnapshotTargetActorLocation, bool* bOutWarpTranslationToLocation, struct FVector* outTargetLocation);
	void FillMetadataForTechnique(const class FName TechniqueName, struct FFortMantisTechniqueMetadata* OutTechniqueMetadata);
	void OnMontageCancelled();
	void OnMontageFinished();

	class FName GetDynamicMontageNameForTechnique(const class FName TechniqueName) const;
	int32 GetLevelForGameplayEffectContainer(const struct FGameplayTag& ApplicationTag) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayAbility_Mantis">();
	}
	static class UFortGameplayAbility_Mantis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayAbility_Mantis>();
	}
};

// Class MantisRuntime.FortMantisData
// 0x0040 (0x0070 - 0x0030)
class UFortMantisData final : public UDataAsset
{
public:
	bool                                          bShowTargetHealthBar;                              // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UFortGameplayAbility_Mantis> TechniqueAbility;                                 // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayEffectContainer>   TechniqueAdditionEffectContainers;                 // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMantisTechniqueData>       Techniques;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMantisTechniqueBranch>     Branches;                                          // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMantisData">();
	}
	static class UFortMantisData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMantisData>();
	}
};

// Class MantisRuntime.FortMantisPawnComponent
// 0x03A8 (0x0448 - 0x00A0)
class UFortMantisPawnComponent final : public UPawnComponent
{
public:
	TMulticastInlineDelegate<void(const struct FFortMantisTechniqueMetadata& TechniqueMetadata)> OnTechniqueMetadataReady; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0xC8];                                      // 0x00B0(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UAnimMontage*, struct FFortMantisMontageData> MontageDataMap;                         // 0x0178(0x0050)(Protected, NativeAccessSpecifierProtected)
	class UFortMantisData*                        MantisData;                                        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortWeapon*                            Weapon;                                            // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D8[0x270];                                    // 0x01D8(0x0270)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsSpecificInputPressed(EFortMantisTechniqueActivationInputType InputType);
	void OnCharacterMovementPreUpdate(class UCharacterMovementComponent* CharMoveComp, float DeltaSeconds);
	void OnOwnerWeaponHolstered();
	void OnPostPhysicsRotation(class UCharacterMovementComponent* CharMoveComp, float DeltaSeconds);
	void SetBranchRule(EFortMantisBranchRule InBranchRule, EFortMantisBranchPath InBranchPath);
	void SetLockOnState(bool bEnabled, class AActor* TargetActor);
	void SimulateInputEvent(EFortMantisTechniqueActivationInputType InputType, EFortMantisTechniqueActivationTimingType InputTiming, const bool bForceProcessEvent);
	bool TryManuallyEndCurrentTechnique();
	bool TryManuallyStartTechnique(const int32 TechniqueDataIndex);

	const struct FFortMantisTechniqueMetadata GetCurrentTechniqueMetadata() const;
	class AActor* GetLockOnTarget() const;
	bool HasCurrentTechniqueMetadataBeenSet() const;
	bool HasLockOnTarget() const;
	bool IsPerformingLockOn() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMantisPawnComponent">();
	}
	static class UFortMantisPawnComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMantisPawnComponent>();
	}
};

// Class MantisRuntime.FortMantisWeaponComponent
// 0x0040 (0x00E0 - 0x00A0)
class UFortMantisWeaponComponent final : public UFortWeaponComponent
{
public:
	class UFortMantisData*                        MantisData;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowPrimaryFireInputsWhileHolstered;             // 0x00A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowSecondaryFireInputsWhileHolstered;           // 0x00A9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UFortMantisPawnComponent> MantisPawnComponent;                              // 0x00AC(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4[0xC];                                       // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMantisReplicatedAnimInstanceInfo  AnimInstanceInfo;                                  // 0x00C0(0x0010)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortMantisReplicatedAnimInstanceInfo  ReplayAnimInstanceInfo;                            // 0x00D0(0x0010)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void OnEquip(class AFortWeapon* Weapon);
	void OnPressSecondaryFire(class AFortWeapon* Weapon);
	void OnPressTrigger(class AFortWeapon* Weapon);
	void OnReleaseSecondaryFire(class AFortWeapon* Weapon);
	void OnReleaseTrigger(class AFortWeapon* Weapon);
	void OnRep_ReplayAnimInstanceInfo();
	void OnUnEquip(class AFortWeapon* Weapon);
	void OnWeaponAbilitiesRemoved(class AFortWeapon* Weapon, EFortWeaponAbilityRemovalReason RemovalReason);

	const struct FFortMantisReplicatedAnimInstanceInfo GetAnimInstanceInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMantisWeaponComponent">();
	}
	static class UFortMantisWeaponComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMantisWeaponComponent>();
	}
};

}

