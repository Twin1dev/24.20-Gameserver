#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MotionTrajectory

#include "Basic.hpp"

#include "MotionTrajectory_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class MotionTrajectory.MotionTrajectoryComponent
// 0x01C8 (0x0268 - 0x00A0)
#pragma pack(push, 0x1)
class alignas(0x08) UMotionTrajectoryComponent : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x1A0];                                     // 0x00A0(0x01A0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMotionTrajectorySettings              PredictionSettings;                                // 0x0240(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FMotionTrajectorySettings              HistorySettings;                                   // 0x024C(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         SampleRate;                                        // 0x0258(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxSamples;                                        // 0x025C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPredictionIncludesHistory;                        // 0x0260(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUniformSampledHistory;                            // 0x0261(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSmoothInterpolation;                              // 0x0262(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetSampleRate(int32 Rate);

	struct FTrajectorySampleRange GetHistory() const;
	struct FTrajectorySampleRange GetTrajectory() const;
	struct FTrajectorySampleRange GetTrajectoryWithSettings(const struct FMotionTrajectorySettings& Settings, bool bIncludeHistory) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MotionTrajectoryComponent">();
	}
	static class UMotionTrajectoryComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotionTrajectoryComponent>();
	}
};
#pragma pack(pop)

// Class MotionTrajectory.CharacterMovementTrajectoryComponent
// 0x0038 (0x02A0 - 0x0268)
class alignas(0x10) UCharacterMovementTrajectoryComponent final : public UMotionTrajectoryComponent
{
public:
	struct FRotator                               LastDesiredControlRotation;                        // 0x0268(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               DesiredControlRotationVelocity;                    // 0x0280(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterMovementTrajectoryComponent">();
	}
	static class UCharacterMovementTrajectoryComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterMovementTrajectoryComponent>();
	}
};

// Class MotionTrajectory.MotionTrajectoryBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UMotionTrajectoryBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FTrajectorySampleRange ClampTrajectoryDirection(const struct FTrajectorySampleRange& Trajectory, const TArray<struct FTrajectoryDirectionClamp>& Directions, bool bPreserveRotation);
	static void DebugDrawTrajectory(const class AActor* Actor, const struct FTransform& WorldTransform, const struct FTrajectorySampleRange& Trajectory, const struct FLinearColor& PredictionColor, const struct FLinearColor& HistoryColor, float TransformScale, float TransformThickness, float ArrowScale, float ArrowSize, float ArrowThickness);
	static struct FTrajectorySampleRange FlattenTrajectory2D(const struct FTrajectorySampleRange& Trajectory, bool PreserveSpeed);
	static bool IsConstantSpeedTrajectory(const struct FTrajectorySampleRange& Trajectory, float Speed, float Tolerance);
	static bool IsSharpVelocityDirChange(const struct FTrajectorySampleRange& Trajectory, float MinSharpTurnAngleDegrees, ETrajectorySampleDomain RotationConstraintDomain, float RotationConstraintValue, float MaxAlignmentAngleDegrees, float MinLinearSpeed, const struct FVector& TurnAxis, const struct FVector& ForwardAxis);
	static bool IsStartingTrajectory(const struct FTrajectorySampleRange& Trajectory, float MoveMinSpeed, float IdleMaxSpeed);
	static bool IsStoppingTrajectory(const struct FTrajectorySampleRange& Trajectory, float MoveMinSpeed, float IdleMaxSpeed);
	static struct FTrajectorySampleRange MakeTrajectoryRelativeToComponent(const struct FTrajectorySampleRange& ActorTrajectory, const class USceneComponent* Component);
	static struct FTrajectorySampleRange RotateTrajectory(const struct FTrajectorySampleRange& Trajectory, const struct FQuat& Rotation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MotionTrajectoryBlueprintLibrary">();
	}
	static class UMotionTrajectoryBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotionTrajectoryBlueprintLibrary>();
	}
};

}

