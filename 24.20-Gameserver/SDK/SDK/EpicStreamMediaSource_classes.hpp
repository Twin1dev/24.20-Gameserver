#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicStreamMediaSource

#include "Basic.hpp"

#include "EpicStreamMediaSource_structs.hpp"
#include "MediaAssets_classes.hpp"


namespace SDK
{

// Class EpicStreamMediaSource.EpicStreamMediaSource
// 0x04B0 (0x0548 - 0x0098)
class UEpicStreamMediaSource : public UStreamMediaSource
{
public:
	class FString                                 VideoStreamSource;                                 // 0x0098(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VideoStreamSourceAB;                               // 0x00A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            VideoId;                                           // 0x00B0(0x0050)(Edit, BlueprintVisible, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	bool                                          bIsLive;                                           // 0x0100(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlurlLive;                                        // 0x0101(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxResolution;                                     // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxBandwidth;                                      // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AspectRatio;                                       // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShareLock;                                        // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAudioOnly;                                        // 0x0111(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPartySync;                                        // 0x0112(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MediaDuration;                                     // 0x0114(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MimeType;                                          // 0x0118(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StreamDenyHTTPCode;                                // 0x0128(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEpicMediaMetadataResolver*             MetadataResolver;                                  // 0x0138(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEpicMediaCDNHostnames*                 CDNHostNames;                                      // 0x0140(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_148[0x1D8];                                    // 0x0148(0x01D8)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& RetrievedUrl)> OnVideoUrlSuccess;             // 0x0320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& RetrievedUrl)> OnVideoUrlFailed;              // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& MediaMetadataResponse)> OnMetaDataFailure;    // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EUCPTypes UCPType)> OnMediaLicensedAudioTreatmentChanged;          // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UEpicMediaDownloadLocalizedOverlays*    EpicMediaDownloadLocalizedOverlays;                // 0x0370(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProtectUserFromAVSettings;                         // 0x0378(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StreamID;                                          // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StreamID_Development;                              // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                           LocalFilePlaybackAsset;                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        HighestFramerate;                                  // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B8[0x190];                                    // 0x03B8(0x0190)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CancelVideoUrlRequest(bool bInCancelled);
	void DisableSharing();
	bool IsScreenRecordingInProgress();
	void MetadataResultHandler(const struct FEpicMediaMetadataExt& MetaData, bool bSuccess);
	void ReinstateSharing();
	void RequestVideoUrl(const class APlayerController* FortPC);
	void SetLocalizedOverlaysV2(class UEpicMediaDownloadLocalizedOverlays* InOverlays);
	void SetPlaybackStartTime(float StartTime);
	void SetUrl(class FString& InURL);
	EUCPTypes ShouldProtectPlayerFromContent();

	bool HasLocalFilePlayback() const;
	bool ShouldStreamBePlaying(const class UObject* WorldContextObject, const class UPrimitiveComponent* PrimitiveComponent, float CullRadius) const;
	struct FMediaPlayerOptions UpdatePlayerOptions(const struct FMediaPlayerOptions& PlayerOptions) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EpicStreamMediaSource">();
	}
	static class UEpicStreamMediaSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEpicStreamMediaSource>();
	}
};

}

