#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PoseSearch

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum PoseSearch.EPoseSearchBooleanRequest
// NumValues: 0x0006
enum class EPoseSearchBooleanRequest : uint8
{
	FalseValue                               = 0,
	TrueValue                                = 1,
	Indifferent                              = 2,
	Num                                      = 3,
	Invalid                                  = 3,
	EPoseSearchBooleanRequest_MAX            = 4,
};

// Enum PoseSearch.EPoseSearchMode
// NumValues: 0x0007
enum class EPoseSearchMode : uint32
{
	BruteForce                               = 0,
	PCAKDTree                                = 1,
	PCAKDTree_Validate                       = 2,
	PCAKDTree_Compare                        = 3,
	Num                                      = 4,
	Invalid                                  = 4,
	EPoseSearchMode_MAX                      = 5,
};

// Enum PoseSearch.EPoseSearchDataPreprocessor
// NumValues: 0x0006
enum class EPoseSearchDataPreprocessor : uint32
{
	None                                     = 0,
	Normalize                                = 1,
	NormalizeOnlyByDeviation                 = 2,
	Num                                      = 3,
	Invalid                                  = 3,
	EPoseSearchDataPreprocessor_MAX          = 4,
};

// Enum PoseSearch.EPoseSearchPoseFlags
// NumValues: 0x0003
enum class EPoseSearchPoseFlags : uint32
{
	None                                     = 0,
	BlockTransition                          = 1,
	EPoseSearchPoseFlags_MAX                 = 2,
};

// Enum PoseSearch.ESearchIndexAssetType
// NumValues: 0x0004
enum class ESearchIndexAssetType : uint32
{
	Invalid                                  = 0,
	Sequence                                 = 1,
	BlendSpace                               = 2,
	ESearchIndexAssetType_MAX                = 3,
};

// Enum PoseSearch.EPoseSearchMirrorOption
// NumValues: 0x0006
enum class EPoseSearchMirrorOption : uint32
{
	UnmirroredOnly                           = 0,
	MirroredOnly                             = 1,
	UnmirroredAndMirrored                    = 2,
	Num                                      = 3,
	Invalid                                  = 3,
	EPoseSearchMirrorOption_MAX              = 4,
};

// Enum PoseSearch.EPoseSearchPostSearchStatus
// NumValues: 0x0003
enum class EPoseSearchPostSearchStatus : uint8
{
	Continue                                 = 0,
	Stop                                     = 1,
	EPoseSearchPostSearchStatus_MAX          = 2,
};

// Enum PoseSearch.EInputQueryPose
// NumValues: 0x0006
enum class EInputQueryPose : uint8
{
	UseCharacterPose                         = 0,
	UseContinuingPose                        = 1,
	UseInterpolatedContinuingPose            = 2,
	Num                                      = 3,
	Invalid                                  = 3,
	EInputQueryPose_MAX                      = 4,
};

// Enum PoseSearch.EHeadingAxis
// NumValues: 0x0006
enum class EHeadingAxis : uint8
{
	X                                        = 0,
	Y                                        = 1,
	Z                                        = 2,
	Num                                      = 3,
	Invalid                                  = 3,
	EHeadingAxis_MAX                         = 4,
};

// Enum PoseSearch.EPoseSearchBoneFlags
// NumValues: 0x0005
enum class EPoseSearchBoneFlags : uint8
{
	Velocity                                 = 1,
	Position                                 = 2,
	Rotation                                 = 4,
	Phase                                    = 8,
	EPoseSearchBoneFlags_MAX                 = 9,
};

// Enum PoseSearch.EPoseSearchFeatureDomain
// NumValues: 0x0005
enum class EPoseSearchFeatureDomain : uint32
{
	Time                                     = 0,
	Distance                                 = 1,
	Num                                      = 2,
	Invalid                                  = 2,
	EPoseSearchFeatureDomain_MAX             = 3,
};

// Enum PoseSearch.EPoseSearchTrajectoryFlags
// NumValues: 0x0009
enum class EPoseSearchTrajectoryFlags : uint8
{
	Velocity                                 = 1,
	Position                                 = 2,
	VelocityDirection                        = 4,
	FacingDirection                          = 8,
	VelocityXY                               = 16,
	PositionXY                               = 32,
	VelocityDirectionXY                      = 64,
	FacingDirectionXY                        = 128,
	EPoseSearchTrajectoryFlags_MAX           = 129,
};

// Enum PoseSearch.EMotionMatchingFlags
// NumValues: 0x0004
enum class EMotionMatchingFlags : uint8
{
	None                                     = 0,
	JumpedToPose                             = 1,
	JumpedToFollowUp                         = 2,
	EMotionMatchingFlags_MAX                 = 3,
};

// ScriptStruct PoseSearch.PoseSearchAnimPlayer
// 0x01B0 (0x01B0 - 0x0000)
struct alignas(0x08) FPoseSearchAnimPlayer final
{
public:
	uint8                                         Pad_0[0x1B0];                                      // 0x0000(0x01B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.AnimNode_BlendStack
// 0x0020 (0x0058 - 0x0038)
struct FAnimNode_BlendStack final : public FAnimNode_AssetPlayerBase
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.MotionMatchingSettings
// 0x0028 (0x0028 - 0x0000)
struct FMotionMatchingSettings final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxActiveBlends;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendProfile*                          BlendProfile;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             BlendOption;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MirrorChangeBlendTime;                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoseJumpThresholdTime;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoseReselectHistory;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SearchThrottleTime;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.AnimNode_MotionMatching
// 0x01E8 (0x0220 - 0x0038)
struct alignas(0x10) FAnimNode_MotionMatching final : public FAnimNode_AssetPlayerBase
{
public:
	struct FPoseLink                              Source;                                            // 0x0038(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	class UPoseSearchSearchableAsset*             Searchable;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ActiveTagsContainer;                               // 0x0050(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0070(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMotionMatchingSettings                Settings;                                          // 0x0088(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bResetOnBecomingRelevant;                          // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceInterrupt;                                   // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x16E];                                     // 0x00B2(0x016E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.AnimNode_PoseSearchHistoryCollector
// 0x0040 (0x0050 - 0x0010)
struct FAnimNode_PoseSearchHistoryCollector final : public FAnimNode_Base
{
public:
	struct FPoseLink                              Source;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         PoseCount;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoseDuration;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRootMotion;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x27];                                      // 0x0029(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.PoseSearchExtrapolationParameters
// 0x000C (0x000C - 0x0000)
struct FPoseSearchExtrapolationParameters final
{
public:
	float                                         AngularSpeedThreshold;                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LinearSpeedThreshold;                              // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SampleTime;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchExcludeFromDatabaseParameters
// 0x0008 (0x0008 - 0x0000)
struct FPoseSearchExcludeFromDatabaseParameters final
{
public:
	float                                         SequenceStartInterval;                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SequenceEndInterval;                               // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchSchemaColorPreset
// 0x0020 (0x0020 - 0x0000)
struct FPoseSearchSchemaColorPreset final
{
public:
	struct FLinearColor                           Query;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Result;                                            // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchPoseMetadata
// 0x000C (0x000C - 0x0000)
struct FPoseSearchPoseMetadata final
{
public:
	EPoseSearchPoseFlags                          Flags;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CostAddend;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ContinuingPoseCostAddend;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchIndexAsset
// 0x0038 (0x0038 - 0x0000)
struct FPoseSearchIndexAsset final
{
public:
	ESearchIndexAssetType                         Type;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SourceAssetIdx;                                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMirrored;                                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BlendParameters;                                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         SamplingInterval;                                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FirstPoseIdx;                                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumPoses;                                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchIndex
// 0x00A0 (0x00A0 - 0x0000)
struct FPoseSearchIndex final
{
public:
	int32                                         NumPoses;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Values;                                            // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 PCAValues;                                         // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 PCAProjectionMatrix;                               // 0x0040(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                 Mean;                                              // 0x0050(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                 WeightsSqrt;                                       // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FPoseSearchPoseMetadata>        PoseMetadata;                                      // 0x0070(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UPoseSearchSchema*                      Schema;                                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPoseSearchIndexAsset>          Assets;                                            // 0x0088(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         MinCostAddend;                                     // 0x0098(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.PoseSearchDatabaseAnimationAssetBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FPoseSearchDatabaseAnimationAssetBase
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.PoseSearchDatabaseSequence
// 0x0028 (0x0030 - 0x0008)
struct FPoseSearchDatabaseSequence final : public FPoseSearchDatabaseAnimationAssetBase
{
public:
	class UAnimSequence*                          Sequence;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         SamplingRange;                                     // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPoseSearchMirrorOption                       MirrorOption;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          LeadInSequence;                                    // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          FollowUpSequence;                                  // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchDatabaseBlendSpace
// 0x0020 (0x0028 - 0x0008)
struct FPoseSearchDatabaseBlendSpace final : public FPoseSearchDatabaseAnimationAssetBase
{
public:
	class UBlendSpace*                            BlendSpace;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EPoseSearchMirrorOption                       MirrorOption;                                      // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGridForSampling;                               // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfHorizontalSamples;                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfVerticalSamples;                           // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.PoseSearchCost
// 0x0004 (0x0004 - 0x0000)
struct FPoseSearchCost final
{
public:
	float                                         TotalCost;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct PoseSearch.PoseSearchFeatureVectorBuilder
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FPoseSearchFeatureVectorBuilder final
{
public:
	TWeakObjectPtr<class UPoseSearchSchema>       Schema;                                            // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.PoseSearchDatabaseSetEntry
// 0x0010 (0x0010 - 0x0000)
struct FPoseSearchDatabaseSetEntry final
{
public:
	class UPoseSearchSearchableAsset*             Searchable;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           tag;                                               // 0x0008(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPoseSearchPostSearchStatus                   PostSearchStatus;                                  // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PoseSearch.PoseSearchDatabaseDerivedData
// 0x00A0 (0x00A0 - 0x0000)
struct FPoseSearchDatabaseDerivedData final
{
public:
	struct FPoseSearchIndex                       SearchIndex;                                       // 0x0000(0x00A0)(NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchBone
// 0x0018 (0x0018 - 0x0000)
struct FPoseSearchBone final
{
public:
	struct FBoneReference                         Reference;                                         // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Flags;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColorPresetIndex;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.PoseSearchTrajectorySample
// 0x0010 (0x0010 - 0x0000)
struct FPoseSearchTrajectorySample final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Flags;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColorPresetIndex;                                  // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PoseSearch.MotionMatchingState
// 0x0100 (0x0100 - 0x0000)
struct FMotionMatchingState final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedPoseJumpTime;                               // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMotionMatchingFlags                          Flags;                                             // 0x004C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RootMotionTransformDelta;                          // 0x0050(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x50];                                      // 0x00B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

